"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricCard = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const MetricCard = ({ icon, title, subtitle, value, status, gradientColors, }) => ((0, jsx_runtime_1.jsxs)("div", { className: "bg-white/95 backdrop-blur-sm rounded-3xl p-8 shadow-2xl border border-white/30 transition-all duration-300 ease-out hover:-translate-y-2 hover:shadow-3xl hover:bg-white/98", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center mb-6", children: [(0, jsx_runtime_1.jsx)("div", { className: "rounded-2xl w-16 h-16 flex items-center justify-center mr-5 shadow-lg", style: { background: gradientColors }, children: (0, jsx_runtime_1.jsx)("span", { className: "text-3xl", children: icon }) }), (0, jsx_runtime_1.jsxs)("div", { className: "flex-1", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-700 mb-1", children: title }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-500 font-medium", children: subtitle })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-5xl font-bold text-gray-800 mb-3 tracking-tight", children: value }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm font-medium text-gray-600 bg-gray-50 rounded-full px-4 py-2 inline-block", children: status })] }));
exports.MetricCard = MetricCard;
